{"version":3,"sources":["clean.js"],"names":["shoppingCart","product","quantity","allowedProducts","lisbon","others","checkCorrectAllowedProducts","cart","numAllowed","city","length","allowed","newCart","map","item","allowedShoppingCart","console","log","createOrderDescription","p","q","orderDescription"],"mappings":";AA2CA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA3CA,IAAMA,EAAe,CACnB,CAAEC,QAAS,QAASC,SAAU,GAC9B,CAAED,QAAS,QAASC,SAAU,GAC9B,CAAED,QAAS,OAAQC,SAAU,GAC7B,CAAED,QAAS,QAASC,SAAU,KAG1BC,EAAkB,CACtBC,OAAQ,EACRC,OAAQ,GAGJC,EAA8B,SAAUC,EAAMC,EAAYC,GAAM,IAAA,EAChE,IAACF,EAAKG,OAAQ,MAAO,GAGnBC,IAAAA,EAAgCR,QAAtBK,EAAAA,MAAAA,OAAAA,EAAAA,EAAaC,UAASN,IAAAA,EAAAA,EAAAA,EAAgBE,OAU/CO,OARSL,EAAKM,IAAI,SAAAC,GACfb,IAAAA,EAAsBa,EAAtBb,QAASC,EAAaY,EAAbZ,SACV,MAAA,CACLD,QAAAA,EACAC,SAAUA,EAAWS,EAAUA,EAAUT,MAMzCa,EAAsBT,EAC1BN,EACAG,EACA,UAGFa,QAAQC,IAAIF,GAEZ,IAAMG,EAAyB,SAAUX,GACDA,IADO,EACPA,EAAAA,EADO,GAAA,GAC3BY,EAATlB,EAAAA,QAAsBmB,EAAVlB,EAAAA,SAEAkB,MAAAA,cAAAA,OAAAA,EAAKD,KAAAA,OAAAA,GAAIZ,OAAAA,EAAKG,OAAS,EAAI,WAAa,MAEzDW,EAAmBH,EAAuBH,GAEhDC,QAAQC,IAAII","file":"clean.23384d9e.js","sourceRoot":"..","sourcesContent":["const shoppingCart = [\n  { product: 'bread', quantity: 6 },\n  { product: 'pizza', quantity: 2 },\n  { product: 'milk', quantity: 4 },\n  { product: 'water', quantity: 10 },\n];\n\nconst allowedProducts = {\n  lisbon: 5,\n  others: 7,\n};\n\nconst checkCorrectAllowedProducts = function (cart, numAllowed, city) {\n  if (!cart.length) return [];\n\n  // const allowed = numAllowed[city] > 0 ? numAllowed[city] : numAllowed.others;\n  const allowed = numAllowed?.[city] ?? allowedProducts.others;\n\n  const newCart = cart.map(item => {\n    const { product, quantity } = item;\n    return {\n      product,\n      quantity: quantity > allowed ? allowed : quantity,\n    };\n  });\n\n  return newCart;\n};\nconst allowedShoppingCart = checkCorrectAllowedProducts(\n  shoppingCart,\n  allowedProducts,\n  'lisbon'\n  // 'faro'\n);\nconsole.log(allowedShoppingCart);\n\nconst createOrderDescription = function (cart) {\n  const [{ product: p, quantity: q }] = cart;\n\n  return `Order with ${q} ${p}${cart.length > 1 ? ', etc...' : '.'}`;\n};\nconst orderDescription = createOrderDescription(allowedShoppingCart);\n\nconsole.log(orderDescription);\n"]}